#pragma autorecover
#pragma classflags("forceupdate")
#pragma namespace("\\\\.\\root\\WMI")


//
// MSMPI Trace Providers
//
[Dynamic,
 Description("MSMPI"),
 guid("{5b09c0bf-453f-43e6-b344-435148a14443}"),
 locale("MS\\0x409")]
class MSMPI:EventTrace
{
    [Description ("Enable Components"),
        ValueDescriptions
        {
            "All APIs and communication",
            "All APIs",
            "Point to point APIs",
            "Point to point polling APIs (MPI_Iprobe, MPI_Test***)",
            "Collective APIs",
            "One sided APIs",
            "Comm APIs",
            "Error handler APIs",
            "Group APIs",
            "Attribute APIs",
            "Datatype APIs",
            "IO APIs",
            "Topology APIs",
            "Dynamic processes APIs",
            "Initialization APIs",
            "Info APIs",
            "Misc APIs",
            "All Interconnects Communication",
            "Sockets Interconnect Communication",
            "Shared Memory Interconnect Communication",
            "Network Direct Interconnect Communiation"
        },
        Values
        {
            "ALL",
            "API",
            "PT2PT",
            "POLL",
            "COLL",
            "RMA",
            "COMM",
            "ERRH",
            "GROUP",
            "ATTR",
            "DTYPE",
            "IO",
            "TOPO",
            "SPAWN",
            "INIT",
            "INFO",
            "MISC",
            "INTERCONN",
            "ICSOCK",
            "ICSHM",
            "ICND"
        },
        ValueMap
        {
            "0xFFFFFFFF",
            "0x00007FFF",
            "0x00000001",
            "0x00000002",
            "0x00000004",
            "0x00000008",
            "0x00000010",
            "0x00000020",
            "0x00000040",
            "0x00000080",
            "0x00000100",
            "0x00000200",
            "0x00000400",
            "0x00000800",
            "0x00001000",
            "0x00002000",
            "0x00004000",
            "0x000F8000",
            "0x00008000",
            "0x00010000",
            "0x00020000"
        }
    ]
    uint32 Flags;
};

